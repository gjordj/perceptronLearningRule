"0","PerceptronFunction <- function(x, y, learning.rate = 1) {"
"0","  w = vector(length = ncol(x)) # initialize w"
"0","  b = 0 # Initialize b"
"0","  iterations = 0 # count iterations"
"0","  # cost_function <- c()"
"0","  R = max(apply(x, 1, EuclideanNorm))"
"0","  convergence = FALSE # to enter the while loop"
"0","  while (!convergence) {"
"0","    convergence = TRUE # hopes luck"
"0","    yc <- ClassifyLinear(x, w, b)"
"0","    for (i in 1:nrow(x)) {"
"0","      if (y[i] != yc[i]) {"
"0","        convergence <- FALSE"
"0","        w <- w + learning.rate * y[i] * x[i,]"
"0","        b <- b + learning.rate * y[i] * R^2"
"0","        iterations <- iterations + 1"
"0","        # cost_function <- c(cost_function,sum(y != yc))"
"0",""
"0","      }"
"0","    }"
"0","  }"
"0","s = EuclideanNorm(w)"
"0","# print(s)"
"0","# cost_function <- c(cost_function,sum(y != yc))"
"0","# cost_function <- as.data.frame(cost_function)"
"0","# ggplot(data=cost_function, aes(x=seq(1,length(cost_function)), y= cost_function, group=1)) +"
"0","#     geom_line(color=""red"")+"
"0","#     geom_point()+"
"0","#     xlab(""Iterations"")"
"0","return(list(w = w/s, b = b/s, steps = iterations))"
"0","}"
"0","pf <- PerceptronFunction (x, y, learning.rate = 0.001)"
"0",""
"0","# - $-b/w[2] = 1/2$"
"0","# - $-w[1]/w[2]x1 = x1$"
"0","cat(""-b/w[2] == 1/2?:"", -pf$b/pf$w[2],""\n"")"
"1","-b/w[2] == 1/2?:"
"1"," "
"1","0.4988039"
"1"," "
"1","
"
"0","cat(""-w[1]/w[2]x1 == x1?:"", -pf$w[1]/pf$w[2])"
"1","-w[1]/w[2]x1 == x1?:"
"1"," "
"1","1.049066"
